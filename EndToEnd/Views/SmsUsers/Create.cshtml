@model EndToEnd.Models.SmsUser

@{
    ViewBag.Title = "Register ";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="overflow: scroll">
        
 @{
//WebImage photo = null;
//var newFile = "";
//var newimagePath = "";

//photo = WebImage.GetImageFromRequest();
//newimagePath = Path.GetFileName(photo.FileName);

 }
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.SmsUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.SmsUserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SmsUserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DesiredNameForSms, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.DesiredNameForSms, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.DesiredNameForSms, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsBusiness, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsBusiness, new {@class = "control-label col-md-2"})
                    @Html.ValidationMessageFor(model => model.IsBusiness, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.BusinessName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BusinessName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsIndividual, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsIndividual)
                    @Html.ValidationMessageFor(model => model.IsIndividual, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MiddleName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Gender", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EnumDropDownListFor(model => model.GenderList, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.GenderList, "", new {@class = "text-danger"})
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.Street, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Street, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.Label("State", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EnumDropDownListFor(model => model.StateList, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.State, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.Country, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Country, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Passport, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                @Html.EditorFor(model => model.Passport, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Passport, "", new {@class = "text-danger"})
            </div>
        </div>
        @Html.HiddenFor(m => m.Gender)
        @Html.HiddenFor(m => m.State)


        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
